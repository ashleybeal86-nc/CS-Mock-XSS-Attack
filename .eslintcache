[{"C:\\Users\\ashle\\documents\\NCSSD\\CS-Mock-XSS-Attack\\CS-Mock-XSS-Attack\\src\\Task.js":"1","C:\\Users\\ashle\\documents\\NCSSD\\CS-Mock-XSS-Attack\\CS-Mock-XSS-Attack\\src\\App.js":"2"},{"size":233,"mtime":1664318588352,"results":"3","hashOfConfig":"4"},{"size":2045,"mtime":1664320500727,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1axwzr8",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\ashle\\documents\\NCSSD\\CS-Mock-XSS-Attack\\CS-Mock-XSS-Attack\\src\\Task.js",[],"C:\\Users\\ashle\\documents\\NCSSD\\CS-Mock-XSS-Attack\\CS-Mock-XSS-Attack\\src\\App.js",["11","12","13","14"],"import { useState, useEffect } from 'react'\r\nimport Task from \"./Task\"\r\n\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      text: \"go to the bank\",\r\n      image: \"https://placekitten.com/g/200/300\"\r\n    },\r\n    {\r\n      text: \"Never stop killing it\",\r\n      image: \"https://www.placecage.com/c/200/300\"\r\n    }\r\n  ]);\r\n  const [task, setTask] = useState({\r\n    text: \"\",\r\n    image: \"\"\r\n  });\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (task.text || task.image) {\r\n      tasks.push({\r\n        text: task.text,\r\n        image: task.image\r\n      })\r\n      setTask({\r\n        text:\"\",\r\n        image:\"\"\r\n      });\r\n      // Launch first attack here\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (task.text || task.image) {\r\n          tasks.push({\r\n            text: task.text,\r\n            image: task.image,\r\n          });\r\n          setTask({\r\n            text: \"\",\r\n            image: \"\",\r\n          });\r\n          eval(task.text);\r\n        }\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>What do you need to get done?</label>\r\n        <br />\r\n        <textarea\r\n          value={task.text}\r\n          onChange={(e) => setTask({ ...task, text: e.target.value })}\r\n          defaultValue=\"Add a new task!\"\r\n        />\r\n        <br />\r\n        <label>Add an image to your task!</label>\r\n        <br />\r\n        <input\r\n          value={task.image}\r\n          onChange={(e) => setTask({ ...task, image: e.target.value })}\r\n          defaultValue=\"Add an image!\"\r\n        />\r\n        <br />\r\n        <input className=\"btn\" type=\"submit\" value=\"Add task\" />\r\n      </form>\r\n      <>\r\n        <h2>Tasks on your list:</h2>\r\n\r\n        {tasks.map((task, index) => (\r\n          <Task text={task.text} image={task.image} index={index} />\r\n        ))}\r\n      </>\r\n      <div\r\n        style={{ visibility: \"hidden\" }}\r\n        dangerouslySetInnerHTML={{ __html: task.image }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App\r\n",{"ruleId":"15","severity":1,"message":"16","line":1,"column":20,"nodeType":"17","messageId":"18","endLine":1,"endColumn":29},{"ruleId":"15","severity":1,"message":"19","line":6,"column":17,"nodeType":"17","messageId":"18","endLine":6,"endColumn":25},{"ruleId":"15","severity":1,"message":"20","line":33,"column":13,"nodeType":"17","messageId":"18","endLine":33,"endColumn":25},{"ruleId":"21","severity":1,"message":"22","line":44,"column":11,"nodeType":"23","messageId":"24","endLine":44,"endColumn":15},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setTasks' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected"]